[supervisord]
nodaemon=true                         ; 让 supervisord 在前台运行，适用于 Docker
logfile=/var/log/supervisord.log       ; supervisord 的日志文件
logfile_maxbytes=50MB                  ; 日志文件最大大小
logfile_backups=10                     ; 保留的日志文件备份数量
loglevel=info                          ; 日志记录级别

[program:django]
command=python3 /cere_pro/manage.py runserver 0.0.0.0:8000  ; 启动 Django 服务
directory=/cere_pro                                ; 设置 Django 应用的工作目录
autostart=true                                    ; 容器启动时自动启动 Django 服务
autorestart=true                                  ; 进程退出时自动重启
stderr_logfile=/var/log/django.err.log            ; 错误日志文件路径
stdout_logfile=/var/log/django.out.log            ; 标准输出日志文件路径
environment=PYTHONUNBUFFERED=1                    ; 设置环境变量
user=app                                          ; 使用非 root 用户运行

[program:celery]
command=celery -A cere_pro worker --loglevel=info   ; 启动 Celery Worker 进程
directory=/cere_pro                                 ; 设置 Celery 应用的工作目录
autostart=true                                     ; 容器启动时自动启动 Celery
autorestart=true                                   ; 进程退出时自动重启
stderr_logfile=/var/log/celery.err.log              ; 错误日志文件路径
stdout_logfile=/var/log/celery.out.log              ; 标准输出日志文件路径
user=app                                           ; 使用非 root 用户运行

[program:redis]
command=redis-server /etc/redis/redis.conf         ; 启动 Redis 服务
autostart=true                                     ; 容器启动时自动启动 Redis
autorestart=true                                   ; 进程退出时自动重启
stderr_logfile=/var/log/redis.err.log              ; 错误日志文件路径
stdout_logfile=/var/log/redis.out.log              ; 标准输出日志文件路径
user=redis                                         ; 使用 Redis 用户运行

[program:mysql]
command=docker-entrypoint.sh mysqld                ; 启动 MySQL 服务
autostart=true                                     ; 容器启动时自动启动 MySQL
autorestart=true                                   ; 进程退出时自动重启
stderr_logfile=/var/log/mysql.err.log              ; 错误日志文件路径
stdout_logfile=/var/log/mysql.out.log              ; 标准输出日志文件路径
user=mysql                                         ; 使用 MySQL 用户运行

[group:web_services]
programs=django,celery                           ; 将 Django 和 Celery 进程分组管理
