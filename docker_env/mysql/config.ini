# MySQL Server 配置文件
# 文件名: my.ini
# 作者: "zhouming"

[client]
# 客户端配置
port = 3306                      # 设置 MySQL 客户端连接的端口，默认是 3306。
default-character-set = utf8mb4   # 设置客户端字符集为 utf8mb4，支持更多字符，如表情符号。
socket = /var/lib/mysql/mysql.sock # 设置连接 MySQL 的 Unix 套接字文件路径。

[mysql]
# MySQL 客户端配置
default-character-set = utf8mb4   # 设置 MySQL 客户端字符集为 utf8mb4。
socket = /var/lib/mysql/mysql.sock # 设置连接 MySQL 的 Unix 套接字路径。

[mysqld]
# 服务器配置
user = mysql                      # 设置 MySQL 服务器进程运行的用户，一般为 mysql。
datadir = /var/lib/mysql           # 设置 MySQL 数据库文件的存储路径。
socket = /var/lib/mysql/mysql.sock # 设置 MySQL 服务器的 Unix 套接字文件路径。
pid-file = /var/lib/mysql/mysql.pid # 设置 MySQL 服务器的进程 ID 文件路径。
port = 3306                       # 设置 MySQL 服务器监听的端口，默认为 3306。
bind-address = 0.0.0.0            # 设置 MySQL 服务器的 IP 地址，0.0.0.0 表示监听所有可用 IP。

# 字符集设置
character-set-server = utf8mb4    # 设置服务器的默认字符集为 utf8mb4，支持所有 Unicode 字符。
collation-server = utf8mb4_unicode_ci # 设置服务器的默认排序规则，使用 Unicode 大小写不敏感排序。

# InnoDB 设置
innodb_buffer_pool_size = 1G     # 设置 InnoDB 缓冲池的大小，影响数据的缓存效果，1GB 为推荐值。
innodb_buffer_pool_instances = 4  # 设置 InnoDB 缓冲池的实例数，有助于提高并发性能。
innodb_read_io_threads = 4       # 设置 InnoDB 读取 I/O 操作的线程数。
innodb_write_io_threads = 4      # 设置 InnoDB 写入 I/O 操作的线程数。
innodb_io_capacity = 2000        # 设置 InnoDB 的 I/O 容量，表示每秒 I/O 操作的数量。
innodb_flush_log_at_trx_commit = 2 # 设置事务提交时日志刷写的方式，`2` 表示每秒刷写一次日志。
innodb_log_file_size = 256M      # 设置 InnoDB 日志文件的大小，256MB 是推荐的值。
innodb_log_buffer_size = 16M     # 设置 InnoDB 日志缓冲区的大小，16MB。
innodb_file_per_table = 1        # 启用时，每个 InnoDB 表都有一个独立的表空间。
innodb_flush_method = O_DIRECT  # 设置 InnoDB 刷写数据的方式，O_DIRECT 能绕过操作系统的缓存，提高性能。

# 连接设置
max_connections = 1000           # 设置最大连接数，默认为 1000，防止大量连接导致资源耗尽。
thread_cache_size = 128          # 设置线程缓存的大小，线程缓存存储预创建的线程以提高性能。
thread_stack = 256K              # 设置每个线程的栈大小，默认 256KB。
max_allowed_packet = 32M         # 设置允许的最大数据包大小，32MB，控制每个请求的最大数据传输量。

# 临时表设置
tmp_table_size = 64M             # 设置临时表的最大大小，64MB。
max_heap_table_size = 64M        # 设置堆内存表的最大大小，64MB。

# 表缓存设置
table_open_cache = 2000          # 设置表缓存的数量，控制可以同时打开的表的数量。
table_definition_cache = 1400    # 设置表定义缓存的大小，控制缓存的表定义数量。

# 日志设置
log-error = /var/log/mysql/error.log # 设置 MySQL 错误日志的存储路径。
log_error_verbosity = 2           # 设置错误日志的详细级别，`2` 表示记录详细的错误信息。
slow_query_log = 1                # 启用慢查询日志，记录执行时间超过 `long_query_time` 的查询。
slow_query_log_file = /var/log/mysql/slow.log # 设置慢查询日志文件的路径。
long_query_time = 2              # 设置查询被认为是慢查询的阈值，单位是秒，超过 2 秒的查询记录为慢查询。
log_bin = /var/log/mysql/mysql-bin.log # 启用二进制日志，路径为 `/var/log/mysql/mysql-bin.log`，用于主从复制及数据恢复。
expire_logs_days = 7             # 设置二进制日志的过期时间，7 天后自动删除日志。
max_binlog_size = 100M           # 设置二进制日志文件的最大大小，超过 100MB 后自动生成新日志文件。

# 安全设置
local_infile = 0                 # 禁用本地文件加载，0 表示禁止。
skip_name_resolve = 1            # 禁用 DNS 解析，直接使用 IP 地址，避免解析主机名所带来的性能开销。
max_connect_errors = 1000        # 设置允许的最大连接错误次数，超过此次数时会阻止连接。
wait_timeout = 60                # 设置非交互连接的超时时间，60 秒后超时。
interactive_timeout = 60         # 设置交互式连接的超时时间，60 秒后超时。

# 性能监控
performance_schema = ON          # 启用性能模式，用于收集服务器性能数据。
performance_schema_instrument = '%=ON' # 启用所有性能监控工具。
performance_schema_consumer_events_statements_history_long = ON # 启用收集长时间的 SQL 查询历史数据。

# 其他设置
sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES # 设置 SQL 模式，`STRICT_TRANS_TABLES` 强制执行严格的事务表约束。
default-storage-engine = INNODB  # 设置默认的存储引擎为 InnoDB，支持事务处理和行级锁。
lower_case_table_names = 1      # 设置表名大小写是否敏感，`1` 表示不区分大小写。
default-time_zone = '+8:00'     # 设置 MySQL 服务器的默认时区，`+8:00` 表示北京时间。

[mysqld_safe]
log-error = /var/log/mysql/error.log # 安全模式下的错误日志路径。
pid-file = /var/lib/mysql/mysql.pid # 安全模式下的进程 ID 文件路径。
